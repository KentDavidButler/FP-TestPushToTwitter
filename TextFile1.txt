 //ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;
            //var client2 = new RestClient("https://api.twitter.com/1.1/statuses/update.json?status=This%20is%20different%20status%20garbaled%20mess");
            //var request2 = new RestRequest(Method.POST);

            //request2.AddParameter("Authorization: OAuth oauth_consumer_key=\"ZKQO3mOrtZSvgD0YPDnyZ4iOf\",oauth_token=\"1103777662433144832-5KmCUZbNaQW30Oi9lPkniPLc0WyUJs\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1552163449\",oauth_nonce=\"vaoUCklwMwI\",oauth_version=\"1.0\",oauth_signature=\"VVNG8npLg1GrdkJekf2cBDDUVv0%3D\"" , ParameterType.HttpHeader);
            //request2.AddHeader("Postman-Token", "d1a2f4c7-8f5a-4d93-a241-0f2496fcc882");
            //request2.AddHeader("cache-control", "no-cache");

            //IRestResponse response2 = client2.Execute(request2);
            //var responseJson2 = response2.Content;

            //foreach (var item in request2.Parameters)
            //{
            //    Console.WriteLine(item);
            //}
            //Console.WriteLine(response2.Content.ToString());
            //Console.WriteLine("responseJson2");
            //Console.WriteLine("");


            //********************************Another Example below*********************
            //var client = new RestClient("https://api.twitter.com/1.1/statuses/update.json?status=This%20is%20different%20status%20garbaled%20mess");
            //client.Authenticator = new HttpBasicAuthenticator("Authorization:", "OAuth oauth_consumer_key=\"ZKQO3mOrtZSvgD0YPDnyZ4iOf\",oauth_token=\"1103777662433144832-5KmCUZbNaQW30Oi9lPkniPLc0WyUJs\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1552163449\",oauth_nonce=\"vaoUCklwMwI\",oauth_version=\"1.0\",oauth_signature=\"VVNG8npLg1GrdkJekf2cBDDUVv0%3D\"");
            //var request = new RestRequest(Method.POST);
            //IRestResponse response = client.Execute(request);
            //var responseJson = response.Content;

            //foreach (var item in request.Parameters)
            //{
            //    Console.WriteLine(item);
            //}
            //Console.WriteLine("");
            //Console.WriteLine(response.ToString());
            //Console.WriteLine(response.Content.ToString());
            //Console.WriteLine("*********************");
            //Console.WriteLine(" ");

           
            //********************************Another Example below*********************
            //ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;
            //var client = new RestClient("https://api.twitter.com/1.1/statuses/update.json?status=This%20is%20different%20status%20garbaled%20mess");
            //var request = new RestRequest(Method.POST);
            //request.AddHeader("Postman-Token", "d1a2f4c7-8f5a-4d93-a241-0f2496fcc882");
            //request.AddHeader("cache-control", "no-cache");
            //request.AddHeader("Authorization", "OAuth");
            //request.AddHeader("oauth_consumer_key", "ZKQO3mOrtZSvgD0YPDnyZ4iOf");
            //request.AddHeader("oauth_token", "1103777662433144832 - 5KmCUZbNaQW30Oi9lPkniPLc0WyUJs");
            //request.AddHeader("oauth_signature_method", "HMAC - SHA1");
            //request.AddHeader("oauth_timestamp", "1552163449");
            //request.AddHeader("oauth_nonce", "vaoUCklwMwI");
            //request.AddHeader("oauth_version", "1.0");
            //request.AddHeader("oauth_signature", "VVNG8npLg1GrdkJekf2cBDDUVv0%3D");

            //IRestResponse response = client.Execute(request);
            //var responseJson = response.Content;
            ////**********Code below didn't work, trying line 48
            ////JsonConvert.DeserializeObject<Dictionary<string, object>>(
            ////        responseJson)["access_token"].ToString();
            ////Console.WriteLine(SimpleJson.DeserializeObject<Dictionary<string, object>>(responseJson)["access_token"].ToString());

            //foreach (var item in request.Parameters)
            //{
            //    Console.WriteLine(item);
            //}
            //Console.WriteLine("");
            //Console.WriteLine(response.ToString());
            //Console.WriteLine(response.Content.ToString());
            //Console.WriteLine("*********************");
            //Console.WriteLine(" ");

            //var client = new RestClient();
            //client.BaseUrl = new Uri("http://twitter.com");
            //client.Authenticator = new HttpBasicAuthenticator("GC.SocialMediaTest@gmail.com", "PassGCSC@1");

            //var request = new RestRequest();
            //request.Resource = "statuses/friends_timeline.xml";

            //IRestResponse response = client.Execute(request);

            //Console.WriteLine(response.ToString());

            //var client = new RestClient("https://api.twitter.com/1.1");
            //client.Authenticator = new HttpBasicAuthenticator("GC.SocialMediaTest@gmail.com", "PassGCSC@1");

            //var request = new RestRequest("statuses/home_timeline.json", DataFormat.Json);

            //var response = client.Get(request);

            //ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;
            //var client2 = new RestClient("https://api.twitter.com/1.1/statuses/update.json?status=This%20is%20different%20status%20garbaled%20mess");
            //var request2 = new RestRequest(Method.POST);

            //request2.AddParameter("Authorization:","OAuth oauth_consumer_key=\"ZKQO3mOrtZSvgD0YPDnyZ4iOf\",oauth_token=\"1103777662433144832-5KmCUZbNaQW30Oi9lPkniPLc0WyUJs\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1552163449\",oauth_nonce=\"vaoUCklwMwI\",oauth_version=\"1.0\",oauth_signature=\"VVNG8npLg1GrdkJekf2cBDDUVv0%3D\"");
            ////request2.AddHeader("Authorization:", "OAuth oauth_consumer_key=\"ZKQO3mOrtZSvgD0YPDnyZ4iOf\", oauth_token=\"1103777662433144832 - 5KmCUZbNaQW30Oi9lPkniPLc0WyUJs\", oauth_signature_method=\"HMAC - SHA1\", oauth_timestamp=\"1552163449\", oauth_nonce=\"vaoUCklwMwI\", oauth_version=\"1.0\", oauth_signature=\"VVNG8npLg1GrdkJekf2cBDDUVv0%3D\"");
            ////request2.AddHeader("cache-control", "no-cache");
            ////request2.AddHeader("Postman-Token", "d1a2f4c7-8f5a-4d93-a241-0f2496fcc882");
            //IRestResponse response2 = client2.Execute(request);
            //var responseJson2 = response2.Content;
            ////**********Code below didn't work, trying line 48
            ////JsonConvert.DeserializeObject<Dictionary<string, object>>(
            ////        responseJson)["access_token"].ToString();
            ////Console.WriteLine(SimpleJson.DeserializeObject<Dictionary<string, object>>(responseJson)["access_token"].ToString()); 
            //foreach (var item in request2.Parameters)
            //{
            //    Console.WriteLine(item);
            //}
            //Console.WriteLine("");
            //Console.WriteLine(response2.ToString());
            //Console.WriteLine(response2.Content.ToString());

            //request.ResponseWriter;

            //HttpWebResponse response1 = (HttpWebResponse)request.ResponseWriter;

            //StreamReader sr = new StreamReader(response1.GetResponseStream());
            //string APIText = sr.ReadToEnd();
            //JToken personData = JToken.Parse(APIText);

            //Console.WriteLine(personData["name"].ToString());
            //Console.WriteLine((int)personData["height"]);
            //Console.WriteLine((int)personData["mass"]);
            //Console.WriteLine(personData["hair_color"].ToString());

            //string URL = "http://swapi.co/api/people/" + personIndex;
            //HttpWebRequest request = WebRequest.CreateHttp(URL);
            //HttpWebResponse response = (HttpWebResponse)request.GetResponse();

            //StreamReader sr = new StreamReader(response.GetResponseStream());
            //string APIText = sr.ReadToEnd();
            //JToken personData = JToken.Parse(APIText);

            //Character output = new Character();

            //output.Name = personData["name"].ToString();
            //output.Height = (int)personData["height"];
            //output.Mass = (int)personData["mass"];
            //output.HairColor = personData["hair_color"].ToString();
            //output.BirthYear = personData["birth_year"].ToString();
            //output.Gender = personData["gender"].ToString();

            //if (personData["homeworld"] == null)
            //{ output.HomeWorld = "This character's vehicles aren't known"; }
            //else
            //{ output.HomeWorld = personData["homeworld"].ToString(); }

            //if (personData["vehicles"].First == null)
            //{ output.Vehicles = "This character's vehicles aren't known"; }
            //else
            //{ output.Vehicles = personData["vehicles"][0].ToString(); }

            //var client = new RestClient("https://api.twitter.com/1.1/users/lookup.json?");
            //// client.Authenticator = new HttpBasicAuthenticator(username, password);

            //var request = new RestRequest("resource/{id}", Method.POST);
            //request.AddParameter("user_id", "1103777662433144832"); // adds to POST or URL querystring based on Method
            //request.AddUrlSegment("id", "123"); // replaces matching token in request.Resource

            //// easily add HTTP Headers
            //request.AddHeader("header", "value");

            //// add files to upload (works with compatible verbs)
            //request.AddFile(path);

            //// execute the request
            //IRestResponse response = client.Execute(request);
            //var content = response.Content; // raw content as string

            //// or automatically deserialize result
            //// return content type is sniffed but can be explicitly set via RestClient.AddHandler();
            //RestResponse<Person> response2 = client.Execute<Person>(request);
            //var name = response2.Data.Name;

            //// easy async support
            //client.ExecuteAsync(request, response => {
            //    Console.WriteLine(response.Content);
            //});

            //// async with deserialization
            //var asyncHandle = client.ExecuteAsync<Person>(request, response => {
            //    Console.WriteLine(response.Data.Name);
            //});

            //// abort the request on demand
            //asyncHandle.Abort();


            //******************************Best Suggestion Yet*****************************
            //public string GetTokenForBrightIdea()
            //{

            //    RestClient restclient = new RestClient(_uri);
            //    RestRequest request = new RestRequest() { Method = Method.POST };

            //    request.AddHeader("Accept", "application/json");
            //    request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
            //    request.AddParameter("grant_type", "password");
            //    request.AddParameter("client_id", _clientId);
            //    request.AddParameter("client_secret", _clientSecret);
            //    request.AddParameter("username", _clientUsername);
            //    request.AddParameter("password", _clientPassword);

            //    var tResponse = restclient.Execute(request);
            //    var responseJson = tResponse.Content;
            //    return JsonConvert.DeserializeObject<Dictionary<string, object>>(
            //        responseJson)["access_token"].ToString();
            //}